buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.ch.myniva.gradle:s3-build-cache:0.10.0"
        classpath "com.gradle.enterprise:com.gradle.enterprise.gradle.plugin:3.9"
    }
}

apply plugin: 'ch.myniva.s3-build-cache'
apply plugin: 'com.gradle.enterprise'

rootProject.name = 'testcontainers-examples'

includeBuild '..'

// explicit include to allow Dependabot to autodiscover subprojects
include 'disque-job-queue'
include 'kafka-cluster'
include 'linked-container'
include 'mongodb-container'
include 'redis-backed-cache'
include 'redis-backed-cache-testng'
include 'selenium-container'
include 'singleton-container'
include 'solr-container'
include 'spring-boot'
include 'cucumber'
include 'spring-boot-kotlin-redis'
include 'spock'

ext.isMasterBuild = false ||
    (System.getenv("GITHUB_REF") == "refs/heads/master") ||
    (System.getenv("BUILD_SOURCEBRANCHNAME") == "master")

buildCache {
    local {
        enabled = !isMasterBuild
    }

    remote(ch.myniva.gradle.caching.s3.AwsS3BuildCache) {
        endpoint = 'fra1.digitaloceanspaces.com'
        region = 'fra1'
        bucket = 'testcontainers'
        path = 'cache'
        push = isMasterBuild && !System.getenv("READ_ONLY_REMOTE_GRADLE_CACHE")
        headers = [
            'x-amz-acl': 'public-read'
        ]
    }
}
