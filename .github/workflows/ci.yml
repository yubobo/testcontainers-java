name: CI

on:
  pull_request: {}
  push: { branches: [ master ] }

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}

jobs:
  thundra_test_initializer:
    runs-on: ubuntu-latest
    outputs:
      thundra_agent_testrun_id: ${{ steps.thundra_test_initializer.outputs.thundra_agent_testrun_id }}
    steps:
      - uses: actions/checkout@v2
      - id: thundra_test_initializer
        uses: thundra-io/thundra-test-init-action@v1
  find_gradle_jobs:
    runs-on: ubuntu-18.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2.4.0
        with:
          java-version: '8.0.302'
          distribution: temurin
      - name: Cache Gradle Home files
        uses: actions/cache@v3.0.9
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-home-testmatrix-${{ hashFiles('**/*.gradle') }}
      - id: set-matrix
        env:
          # Since we override the tests executor,
          # we should not push empty results to the cache
          READ_ONLY_REMOTE_GRADLE_CACHE: true
        run: |
          TASKS=$(./gradlew --no-daemon --parallel -q testMatrix)
          echo $TASKS
          echo "::set-output name=matrix::{\"gradle_args\":$TASKS}"
  check:
    needs: [find_gradle_jobs, thundra_test_initializer]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find_gradle_jobs.outputs.matrix) }}
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2.4.0
        with:
          java-version: '8.0.302'
          distribution: temurin
      - name: Cache Gradle Home files
        uses: actions/cache@v3.0.9
        continue-on-error: true
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-home-${{matrix.gradle_args}}_check-${{ hashFiles('**/*.gradle') }}
      - name: Clear existing docker image cache
        run: docker image prune -af
      - name: Thundra Gradle Test Instrumentation
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: thundra-io/thundra-gradle-test-action@v1
        with:
          apikey: ${{ secrets.THUNDRA_API_KEY }}
          project_id: ${{ secrets.THUNDRA_PROJECT_ID }}
      - name: Build and test with Gradle (${{matrix.gradle_args}})
        run: |
          ./gradlew --no-daemon --continue --scan ${{matrix.gradle_args}} \
            $([[ -f $THUNDRA_GRADLE_INIT_SCRIPT_PATH ]] && echo "--init-script $THUNDRA_GRADLE_INIT_SCRIPT_PATH")
        env:
          THUNDRA_AGENT_TEST_RUN_ID: ${{ needs.thundra_test_initializer.outputs.thundra_agent_testrun_id }}
          THUNDRA_AGENT_REPORT_REST_BASEURL: https://collector.thundra.us/v1
